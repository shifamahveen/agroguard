<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hand Detection</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body >   
  <!-- Navbar -->
  <nav class="bg-gray-600 p-4 shadow-md">
    <div class="max-w-screen-xl px-16 mx-auto flex justify-between items-center">
      <h1 class="text-white text-2xl "><a href="/" class="text-white">SignSense</a></h1>
      <div class="flex space-x-4">
        <a href="/profile" class="text-white text-sm  bg-gray-400 duration-300 ease-in-out hover:bg-orange-500 px-4 py-2 rounded">Profile</a>
        <a href="/config/" class="text-white  text-sm bg-gray-400 duration-300 ease-in-out hover:bg-orange-500 px-4 py-2 rounded">Config</a>
        <% if (typeof user !== 'undefined' && user && user.role !== 'user') { %>  
            <a href="/admin" class="text-white text-sm bg-gray-400 duration-300 ease-in-out hover:bg-orange-500 px-4 py-2 rounded">Admin</a>
          <% } %>          
        <a href="/logout" class="text-white text-sm  bg-gray-400 duration-300 ease-in-out hover:bg-orange-500 px-4 py-2 rounded">Logout</a>
      </div>
    </div>
  </nav>

    <div class="bg-gray-100 flex flex-col items-center justify-center min-h-screen">

        <h1 class="text-3xl  text-center text-gray-800 mb-6">Upload or Capture an Image for Hand Detection</h1>

        <!-- Upload Image Form -->
        <form id="uploadForm" action="/detect" method="POST" enctype="multipart/form-data"
            class="bg-white shadow-lg rounded-lg p-6 w-full max-w-md text-center">
            <input type="file" name="image" id="fileInput" accept="image/*" class="mb-4 p-2 border rounded w-full">
            <button type="submit"
                class="w-full bg-blue-600 hover:bg-blue-700 text-white  py-2 px-4 rounded transition">
                Upload & Detect
            </button>
        </form>

        <h2 class="text-xl  my-6 text-gray-600">OR</h2>

        <!-- Camera Capture -->
        <button id="openCamera"
            class="bg-green-600 hover:bg-green-700 text-white  py-2 px-4 rounded mb-4 transition">
            Open Camera
        </button>

        <div class="flex flex-col items-center mb-20">
            <video id="video" width="400" height="300" autoplay class="rounded shadow-lg hidden"></video>
            <canvas id="canvas" width="400" height="300" class="hidden"></canvas>

            <button id="captureBtn"
                class="bg-yellow-600 hover:bg-yellow-700 text-white  py-2 px-4 rounded mt-4 transition hidden">
                Capture
            </button>
        </div>

        <form id="cameraForm" action="/detect" method="POST" enctype="multipart/form-data" class="hidden mt-6">
            <input type="hidden" name="imageData" id="imageData">
            <button type="submit"
                class="w-full bg-purple-600 hover:bg-purple-700 text-white  py-2 px-4 rounded transition">
                Submit Captured Image
            </button>
        </form>

    </div>
    
    <footer class="bg-gray-600 p-4 shadow-md text-center text-white fixed bottom-0 w-full mt-28">
        &#169; SignSense
    </footer>

    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureBtn = document.getElementById('captureBtn');
        const cameraForm = document.getElementById('cameraForm');
        const imageDataInput = document.getElementById('imageData');
        const openCameraBtn = document.getElementById('openCamera');

        let stream;

        openCameraBtn.addEventListener('click', async () => {
            try {
                stream = await navigator.mediaDevices.getUserMedia({ video: true });
                video.srcObject = stream;
                video.classList.remove('hidden');
                captureBtn.classList.remove('hidden');
            } catch (error) {
                console.error('Error accessing camera:', error);
            }
        });

        captureBtn.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            const imageDataURL = canvas.toDataURL('image/png');
            imageDataInput.value = imageDataURL;

            // Stop the camera stream
            stream.getTracks().forEach(track => track.stop());

            // Hide video, show form
            video.classList.add('hidden');
            captureBtn.classList.add('hidden');
            cameraForm.classList.remove('hidden');
        });
    </script>

</body>
</html>
